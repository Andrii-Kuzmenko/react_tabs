{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","selectedTabContent","onTabSelected","className","map","tab","id","title","classNames","onClick","href","content","App","useState","selectedTab","setTab","newSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,cAEA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAAAC,GACR,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MAEZ,OACE,oBACEJ,UAAWK,IAAW,CAAE,YAAaR,IAAkBM,IACvD,UAAQ,MAFV,SAKE,mBACEG,QAAS,WACHT,IAAkBM,GACpBJ,EAAcG,IAGlBK,KAAI,YAAOV,EAAP,KACJ,UAAQ,UAPV,SASGO,KAXEF,EAAIC,WAmBnB,qBAAKH,UAAU,QAAQ,UAAQ,aAA/B,SACGF,QCxCIF,EAAO,CAClB,CAAEO,GAAI,QAASC,MAAO,QAASI,QAAS,eACxC,CAAEL,GAAI,QAASC,MAAO,QAASI,QAAS,eACxC,CAAEL,GAAI,QAASC,MAAO,QAASI,QAAS,gBAG7BC,EAAgB,WAC3B,MAA8BC,mBAASd,EAAK,IAA5C,mBAAOe,EAAP,KAAoBC,EAApB,KACQT,EAAuBQ,EAAvBR,GAAIC,EAAmBO,EAAnBP,MAAOI,EAAYG,EAAZH,QAMnB,OACE,sBAAKR,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBI,KAGtB,cAAC,EAAD,CACER,KAAMA,EACNC,cAAeM,EACfL,mBAAoBU,EACpBT,cAdgB,SAACc,GACrBD,EAAOC,UCfXC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3d07425c.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  selectedTabContent: string;\n  onTabSelected: (id: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  selectedTabContent,\n  onTabSelected,\n}) => {\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                className={classNames({ 'is-active': selectedTabId === id })}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  onClick={() => {\n                    if (selectedTabId !== id) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                  href={`\"#${selectedTabId}\"`}\n                  data-cy=\"TabLink\"\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTabContent}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setTab] = useState(tabs[0]);\n  const { id, title, content } = selectedTab;\n\n  const onTabSelected = (newSelectedTab: Tab) => {\n    setTab(newSelectedTab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={id}\n        selectedTabContent={content}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}