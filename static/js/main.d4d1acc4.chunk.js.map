{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","title","classNames","onClick","href","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"8LAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MAEZ,OACE,oBACEF,UAAWG,IAAW,CAAE,YAAaT,IAAkBK,IACvD,UAAQ,MAFV,SAKE,mBACEK,QAAS,kBAAOV,IAAkBK,GAAOJ,EAAcG,IACvDO,KAAI,WAAMN,GACV,UAAQ,UAHV,SAKGG,KAPEH,UAef,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYU,cCrCRb,G,kBAAc,CACzB,CAAEM,GAAI,QAASG,MAAO,QAASI,QAAS,eACxC,CAAEP,GAAI,QAASG,MAAO,QAASI,QAAS,eACxC,CAAEP,GAAI,QAASG,MAAO,QAASI,QAAS,iBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASf,EAAK,IAApD,mBAAOG,EAAP,KAAoBa,EAApB,KACQV,EAAcH,EAAdG,GAAIG,EAAUN,EAAVM,MAEZ,OACE,sBAAKF,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBE,KAGtB,cAAC,EAAD,CACET,KAAMA,EACNC,cAAeK,EACfJ,cAAec,QCvBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d4d1acc4.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../react-app-env';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                className={classNames({ 'is-active': selectedTabId === id })}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  onClick={() => (selectedTabId !== id) && onTabSelected(tab)}\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './react-app-env';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n  const { id, title } = selectedTab;\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={id}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}